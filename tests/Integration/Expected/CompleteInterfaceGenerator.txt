namespace Wingu\OctopusCore\CodeGenerator\Tests\Integration\Fixtures
{

    /**
     * Short interface description.
     *
     * Long description.
     * On multiple lines.
     *
     * @baseAnnotation testing
     */
    interface MyInterface extends i1, i2, \Wingu\OctopusCore\CodeGenerator\Tests\Integration\Fixtures\Dummy\i3, \Wingu\OctopusCore\CodeGenerator\Tests\Integration\Fixtures\Dummy\i4
    {

        const MY_CONST1 = null;

        /**
         * My second constant.
         *
         * @var string
         */
        const MY_CONST2 = 'it\'s a string';

        /**
         * Constructor.
         *
         * @param mixed $param1 Parameter 1.
         * @param string $param2 Parameter 2.
         */
        public function __construct($param1, $param2 = null);

        /**
         * Protected function.
         *
         * @param array $array The array to count.
         * @return integer
         */
        public function publicFunc(array $array = array());

        /**
         * Private static function.
         *
         * This is my long function.
         *
         * @param \DateTime $datetime The date time.
         * @return boolean
         * @throws \InvalidArgumentException If the date is in the past.
         */
        public static function publicStaticFunction(\DateTime $datetime);
    }
}